= Bluetooth Low Energy技術を俯瞰する

Bluetooth Low Energy技術は、ものとものとが、マイクロ秒単位でタイミングを合わせて、電波をやり取りします。そのようなやり取りは、人にできるものではありません。電気回路とプログラムが、高速に処理をして、通信とその振る舞いとが生み出されます。

Bluetooth Low Energy技術の振る舞いは、組み立てたプログラムから生じます。この技術の通信が、どのような流れで行われるかをざっくり知っていると、プログラムを作りやすくなります。また、通信は止められませんし、通信相手は動き続ける別のプログラムです。プログラムが期待通りに動かない場合に、それを観察して修正方法を見つけるには、ざっくりとした知識が必要です。

この章では、Bluetooth Low Energy技術を俯瞰します。初めて通信相手を見つけて、最初の1つのデータをやり取りするまでに、どのような経路で情報が伝わり、処理をされて、相手にまで届くのでしょうか。用途に合う適切な通信パラメータは、どのように設定するのでしょうか。また、この技術は、利用場面をより広げようと、新技術を取り込み続けています。それぞれのバージョンで、何ができるようになったのでしょうか。

== 無線通信の仕組みとその流れ

Bluetooth Low Energy技術は、電波で、通信相手の発見と通信状態の確立、そしてデジタル・データのやり取りを行います。この通信の始まりから終わりまでを、シンプルに見ていきます。

=== 電波を使う無線通信技術

Bluetooth Low Energy技術は、無線通信に2.4ギガヘルツ帯の周波数の電波を使います。電波は公共の資源として、それぞれの国ごとに電波法で管理されています。Bluetooth Low Energy技術では、電波を送信する機器の質を認証する制度があり、購入した機器は誰でも使用できます。

2.4ギガヘルツ帯は、世界各国が共通して割り当てているので、それぞれの国の認証を取得している製品であれば、その製品を各国に持ち込んでも、そのまま使えます。

2.4ギガヘルツ帯の電波伝搬の性質とその振る舞いが、Bluetooth Low Energy技術の通信の振る舞いになります。電波は、遠くに伝わっていくほど、広がり弱くなり、ついには受信できなくなるほど弱くなります。金属板にあたると反射して透過しないので、金属扉や鉄の筋交が入っている鉄筋コンクリートでは、遮られます。また、水を含む人体や木材などの、ものにも吸収されます。

Bluetooth Low Energy技術での通信距離は、理想的な状況で100メートルとありますが、現実的には10メートルから30メートルほどです。無線通信では、なぜか、より遠くと通信したくなるものです。より強い電波を送信すればいいのではと思うでしょう。

ですが、2.4ギガヘルツ帯は、Bluetooth Low Energy技術だけではなく、無線LANやZigbeeなどの、いくつもの高度化したデジタルデータ通信技術にも割り当てられている周波数帯です。どの無線通信技術にも等しく通信ができるようにと、周波数幅当たりの電波出力が規定されていて、通信距離はそれで制限されます。

=== デジタル・データとパケット通信

映画で、エス・オー・エスの救難信号を、モールス符号で送信する場面を見たことがあるでしょう。電波を送信する時間の長短でアルファベットを表す電信は、無線通信の最初期から使われて続けています。デジタル無線技術も、電波の強弱や周波数の変化で、0と1の情報を伝えます。

デジタル無線通信では、デジタル・データを、パケットと呼ぶ単位でやり取りします。1つのパケットには、パケットの開始位置を示す部分と送信元と宛先のアドレス情報、送信するデジタル・データ、そしてデータ・エラーや悪意ある攻撃を検出するためのデータで構成されます。

Bluetooth Low Energy技術は、パケットを、1秒あたりに100万の0と1の情報、つまり1メガビットの速さで送信します。これだけ見ると、ずいぶん速くデータを送れると思ってしまいます。ですが、無線通信の速さと、データを送信する速さは、異ります。パケットを送っても、相手が正しくパケットを受信したと返してくるまでは、次のパケットは送れません。このやり取りがあるので、ある程度大きなデータを送ろうとすると、送信実効速度は、毎秒1メガビットではなく、毎秒TBDほどになります。

2.4ギガヘルツの周波数帯は、80メガヘルツの周波数幅があります。Bluetooth Low Energy技術は、これを1つ2メガヘルツ幅、合計40のチャンネルに分割して使います。通信相手の発見と接続の確立には、40のうち3つのチャンネルを使います。このチャンネルで、相手を見つけられれば、残る37のチャンネルを、一定時間ごとに、ぴょんぴょんと切り換えながら通信します。

2.4ギガヘルツ帯は、数多くの機器の様々な無線通信技術による通信が飛び交う、にぎやかな周波数帯です。この周波数帯を、40に分けたチャンネルで見ると、あるチャンネルは通信ができない程にぎやかかもしれませんし、またあるチャンネルはとても静かかもしれません。チャンネルをぴょんぴょんと切り替えることで、どこかのチャンネルでは、通信ができるのです。

また、とても多くのBluetooth Low Energy技術の機器が通信をするかもしれません。この場合も、それぞれの通信が、37のチャンネルに分散することで、混信が起きにくくなります。ただ、通信相手の発見と接続には、3つのチャネルを使います。周囲に数十や数百の機器が密集する極端な状況では、それぞれの機器がお互いの通信相手を見つける通信が、その3つのチャンネルに集まってしまい、なかなか接続できなくなります。

それほど極端な密集など、そうそうは起きないのではとも思います。ですが、都会の混雑したファミリーレストランや、マラソンや自転車レースのスタート地点では、誰しもが持っているスマートホンやフィットネス機器で、極端な密集状態が生じます。技術はバランスです。このような極端な場合は、どうしようもないと、諦めることも必要です。

=== GATT基盤とその通信

Bluetooth Low Energy技術は、もちろんバイナリ・データをやり取りすることができますが、ほとんどの利用場面は、GATT基盤の上に作られます。機器は、ATTテーブルと呼ばれる、小さなデータ・テーブルを持っています。GATT基盤では、ATTプロトコルで、通信を通じてATTテーブルを読み書きします。

ATTテーブルには、構造があります。サービスは、キャラクタリスティクスの集まりです。キャラクタリスティクスは、値を読み書きする行です。キャラクタリスティクスの次の行には、CCCがあります。この行には、キャラクタリスティクスの属性を設定します。属性はいくつかありますが、そのうちの通知属性を有効にすると、キャラクタリスティクスの値が変更されるたびに、それが通知されてきます。

1つのサービスは、これ以上小さくは分割できない、最小単位の1つの機能を表します。例えば、バッテリーを内蔵したポータブル冷蔵庫があったとします。いくつもの機能がありますが、バッテリーに関する機能は、バッテリーサービスという1つのサービスになるでしょう。アプリケーションは、通信接続して、ATTテーブルから、バッテリーサービスとそのキャラクタリスティクスを見つけます。そして、バッテリー残量を示すキャラクタリスティクスを見つけて、その値を読み出します。

ATTテーブルは、操作パネルのようなものと言えます。表示器は、読みだせるキャラクタリスティクスです。ボタンは、書き込めるキャラクタリスティクスです。操作パネルの表示やボタンは、わかりやすいように、機能でグループ化されます。そのグループ化に相当するのが、サービスです。

=== プロファイルとその活用

Bluetooth Low Energy技術のGATT基盤は、サービスやキャラクタリスティクスを自由に定義して使えます。それらのサービスの定義と機器の振る舞いとを合わせて、プロファイルと呼びます。このプロファイルとその運用が、Bluetooth Low Energy技術の、多種多様なものを生み出す仕組みです。

自由に定義したプロファイルは、カスタム・プロファイルと呼びます。機器と連携するアプリケーションを、どちらも自分で作るならば、自分で勝手なサービスやキャラクタリスティクスを決めて、プログラムを作ります。製品とアプリケーションとを両方作る場合、あるいは電化製品とそのリモコンのように必ず対で使うものならば、製品やサービスも、カスタム・プロファイルで作れます。

Bluetooth Low Energy技術を活用した製品を広く普及させたい場合は、カスタム・プロファイルでは困ることがあります。例えば、フィットネス向けの心拍センサーを販売するとします。販売する側からは、より多く販売するために、様々なアプリケーションに採用してほしいと思います。ですが、アプリケーションを開発する側から見ると、心拍センサーを販売する会社はいくつもあるので、同じような心拍センサーなのに、会社ごとに異なるカスタム・プロファイルに個別に対応するのは、大変です。

機器の市場を作るには、特定の会社に依存しない確固たるプロファイルの定義が必要です。Bluetooth SIGは、プロファイルを認証しています。その分野の会社や会社グループが、Bluetooth SIGに参加して、特定の会社に偏らない客観的で誰もが利用できるプロファイルを作り、認証を受けます。

Bluetooth Low Energy技術を用いる製品を登録する時に、認証されたプロファイルを用いている場合は、認証されたプロファイルを満たしているかのテストを実施して、テスト・レポートの提出が必要です。Bluetooth SIGが、プロファイルの実装を確かめて認証することで、特定の会社に依存せずに、プロファイルを満たす製品が市場に出ていきます。

認証されたプロファイルに少し、独自の機能を付け加えることは、できるでしょうか。例えば、Bluetooth SIGにそんなプロファイルは登録されていませんが、ここで仮に冷蔵庫のプロファイルがあったとしましょう。ある企業が工夫して、バッテリーで動作する冷蔵庫を開発したとします。ですが、冷蔵庫のプロファイルに、バッテリーに関する定義は、まずないでしょう。

この場合は、冷蔵庫のプロファイルに、バッテリー残量を示すバッテリーサービスがあれば、よさそうです。では、認証されたプロファイルに、バッテリー・サービスを追加した、新たなプロファイルを提案すればよいのでしょうか。それも、いいかもしれません。ですが、プロファイルの更新は、年単位の時間がかかるでしょう。1つの製品を、ちょっと販売したいだけでは、手間に見合わなさそうです。

この場合は、認証されたプロファイルを実装して、さらにバッテリー・サービスを独自に追加すればよいのです。認証されたプロファイルは、それ以外のサービスの実装を、禁止しません。もちろん、認証されたプロファイルに対応するアプリケーションは、そのような独自のサービスのことは知りませんから、その独自の工夫が使われることはありません。ですが、その独自のサービスも活用できるアプリケーションを、独自に開発して提供すればよいのです。











#@# 通信で機器を動かしたり、センサーの値を読み出すには、どのような仕組みを作るでしょうか。まず思いつくのは、動作を示すコマンドの値と、そのコマンドに必要な値の、コマンド体系を作ることでしょう。そして、そのコマンド体系で通信するプログラムを、作るのです。

#@# このコマンド体系を使う方法は、自分の目の前にある1組のものを通信で連携させるなら、とてもよい方法です。また、家電とリモコン装置のような、必ずセットで販売されて使われるものでも、うまくいきます。ですが、販売された機器を操作する、スマートホンのアプリケーションを開発する側から見ると、どうでしょうか。

#@# まずコマンド体系を作るのは、たいてい機器を設計する側です。その機器で使えればよいので、機器ごとに、バラバラにコマンド体系が作られるでしょう。もしかすると、同じ製品でも、機能の追加などで、製造された時期で、コマンド体系が異なるかもしれません。アプリケーションを作る側から見れば、乱立する全てのコマンド体系に対応するのは、やってられません。

#@# コマンド体系が統一。メーカーごとに、不仲で、グループが分裂したら。ちょっとした工夫を入れたい、その機能をコマンド体系に組み込んでもらわないと。でも、大変だからで、入れるのに時間がかかる。製品ではすぐなのに。









== 特徴とその出し方

=== 超低消費電力無線通信技術

当たり前なことですが、無線通信回路が両方オンになっていること。
無線通信回路を動作する時間を、可能な限り短くすること。それ以外の時間は、電力を温存してスリープ状態にすること。

GATT基盤で、20バイト。英数字のアルファベット、20文字。
電源をオンにする、ような表現なら、パケット1つに収まる。

通信を始めて、一瞬で終わったら電源を落とせる。
スタートアップと終了が素早い方式。とてもシンプルと言える。
示し合わせた時間で、即座に通信をして、完了する。

発振回路、周波数の基準となる、安定するまで時間がかかる、無線通信回路のキャリブレ、動作開始、
完全に電源は落とせない、スリープして、次のタイミングには、起きるような仕組み。

いつかやり取りするだろう、1つのパケットのために、一定時間ごとに通信をお互いに再開する。

役割の分割、発見の場合。通信のやり取り、

データストリームとしてみると、音声は送れる、動画を送るには心もとない(できないわけではない)。送信と受信とは、同時にはできない、切り替えて行う。






- 目の前にある何と電波を直接やり取りする、

- 相手の発見,発見されること、接続までの流れ
- セキュリティやプライバシーを確保できること
- 接続してからの通信、
    - 利用場面に合うこと, GATT基盤, 
    - イメージとしては、操作パネルをデジタル・データで表現するようなもの。
- 仕様の分担
    - コア仕様とプロファイル。業界で共通のものをSIGに持ってもらう。

人が見ている、見ていないに関わりなく、大体ソフトウェア。結果が表示されている?だけの違い。

=== 具体的なものとその構成は?

無線モジュール(マイコン入り)、スマホとかパソコンのアプリ。

- 無線通信する部分、電波の送信と受信、電源と半導体。パケットをやり取りする部分、コントローラ。
- 通信を処理する一般的なもの。規格を満たしていること、通信に汎用に使えるもの、ホスト。
- アプリケーション。ホストを通じて、何をするの、の部分を使う部分。アプリの上は、ネットと連携するとか、諸々、何でもあり。

=== 通信相手を見つけて、最初のパケットをやり取りするまで(リンク層)
=== GATTの仕組みとやり取り
=== サービス、キャラクタリスティクス、振る舞い
=== パラメータ: セキュリティ、プライバシー保護(パケットレベルの)
=== パラメータ: コネクションインターバル、パケットの長さ(指針)






== なんで俯瞰するの?

- 作れるのかな?を検討する材料。いろんな部分があるから、どこかでつまづかないかなの確認。
    - 電波が届くのかな、通信が途切れて不快な体験になったりしない、コストはいける、何年も販売し続けられる?
- 作るのはアプリ。アプリが呼び出した先に、通信があって、相手に届いて、さらに返ってくる、流れ。
    - 流れをイメージするため。作るときに、どこから始まってどこでどうなるのかまで。(作りたいは、決まっている)





=== 進歩し続ける。

昔はできなかったことが、今はできるるようになってたり:
- 後方互換性はある
- 昔はできなかったことが、今はできるようになってたり。仕様的、ホストとかのソフト的なものとか
- 使用なもの4.0から5.3、バージョンごとで、機能が拡張されている。

- コア仕様で、ちょっと違う。もしもバージョン縛りが出るなら、コントローラとホストを選ぶ。

== 基本の動き

- アドバタイジング、スキャン。
- 接続。パラメータの交換。
- セキュリティ。ペアリングとボンディング。
- GATTのテーブルの読み出し。
- キャラクタリスティクスのデータのやり取り。

- 切断と再接続。
- 誰かが接続してきた。
- 電波で追跡してきた。なんか盗聴されてる?

=== おさえとくところ
==== スループットとレイテンシ
パケットのやりとり部分で決まる。消費電力とのバランス。
パラメータの指定。スマホからは、できない(ペリフェラルでも?)。ペリフェラル側からなので、用途に合わせて。(スマホ側と、確認するべき点。)

==== プロファイルとカスタムプロファイル
アプリとセットで作るから、それでいい。サービス/キャラクタリスティクスの構造と、振る舞いの仕様化。
独自に拡張しちゃってもいい。操作パネルのイメージ。
(ファーム更新、テーブル構造が変更されたら、ハンドラ?)

== コア仕様の流れと、利用分野と利用例

ベースの動きは、前の節で見たので、進化を見ながら、用途とその広がりを見ていく。

- BT4.0
- BT4.1 
- BT4.2
- BT5.0
- BT5.1
- BT5.2
- BT5.3

=== 誰が規格を作っているの?
非営利団体の役割
- 仕様を作る
- いろんなところが参加するので、仕様を満たしているかを認証する
- プロモーション、広める活動、

どれも、何か組織や団体があるもの:
- 会社組織、無線通信の半導体やシステムを丸っと、、仕様は公開しなくてもいい
- ワーキンググループ、規格を作る、学会とか何かとか。IEEEとか、
- 非営利団体、とは言いつつ利害関係がある会社とかが集まって、規格を作る。

コア仕様、新たな使い道が現れては、そこに対応したり、新たな利用場面が作れる技術の拡張、追加。
コア仕様の上にある、プロファイルやサービス。BLEは誰かがSIGに参加して、提出して、一般的なものだと認めてもらって登録してもらう。

いろんなものを作るベースになる技術をまとめたところ、コア仕様:
- BT3.0までと、BT4.0以降、BLEの追加。ここを取り扱う。
- BT4.0、とてもシンプル。BT4.2で一応の完成? より汎用な。
- BT5.0からは、高速、オーディオとか、モリモり複雑。

=== 利用分野と利用例
- 周辺機器、キーボードとかマウスとか。デバイスドライバ化。
- スマホと連携する何か、フィットネス、アプセサリ。アプリ自体にドライバ相当が入る感じ。GATT基盤。
- 家電むけは、力入れている。(ファーム更新? 高速化)、長距離化。
- マイクロロケーション、荷物につけるタグ。アドバタイジングの拡張とか。電波の方向わかります、とか。
- オーディオ。

誰も使ってないですけどね。

=== 発展の方向
==== ちょっと大きかったのが
4.0で、マスタースレーブ同時になれる実装。実際にスマホで使うのだと、必要。2つ無線モジュールを載せるしかないとか、それはないので。
独自拡張。Androidで、ぐっちゃぐちゃ。Appleも、SIGに入って、仕様策定とともに。

==== 方向性1: 電波のやり取りの部分
高速化
長距離化
方向がわかる

==== 方向性2: アドバタイジングの表現力
マイクロロケーションとか、アセット管理で使うかも。
データの量をとにかく増やす。ってそれ矛盾していませんか? ブロードキャストという形の、拡張機能。

==== 方向性2: 新たな利用場面
オーディオ。売れる?

==== 方向3: なぁなぁだっった部分をはっきりと
- GATTのテープルのアップデートの通知
- パケットをいくつも送りつけて、バッファ頼みの部分(スマホはいくらでも取りこぼさないでしょう仮定)
当然、4.2とかそれ以前では使えないので、そのテクニックは、アプリの開発のところを参照で。

== その他の方式の方が良かったりするの?

- BLE
- Wi-Fi
- LTE-M
- LoRa

BLEの特緒として:
- アンライセンスドバンドの周波数を使う,世界で広く使える、誰でも購入して使える。
- ものに使える工夫: 超低消費電力が可能(通信の維持), 低コスト, GATT基盤(振る舞いはどんどん増やせる)。
- 無線通信のベース、セキュリティ、プライバシーの保護。低コストでしかし現代的な通信の保護。

環境的に:
- スマホのアプリで使える。
- 開発キットがやたら出てる。

通信で、かなり汎用に使える。万能ではないけど、無理は効く。

=== ライセンスドとアンライセンスド
ライセンスドバンドを使う方式。事業者に割り当て。高速。月額。基地局との通信。通信速度低めで、消費電力小さい方式。LTE-M。IoT NB。
ボタン電池とは言えないけど、単三電池みたいな大きさの電池で10年とか、そういう感じ。メーターとかに使える、法定交換の間。
機器を単体で販売して、ネット経由で荷物追跡できますタグとか。
世界中で、キャリアごとに周波数なので、かなりいくつもの周波数が使えるようにしてあったりと、ハードはそれなりのお値段になる。バンド対応。認証も費用がかかる。
BLEでも、スマホがネットワークを作ったりしているものがあるので。

=== サブギガヘルツとギガヘルツ
サブギガヘルツ、距離が届く。周波数の低さで。その特徴を活かすのに、出力も大きめ。
920MHz帯。周波数の幅がせまい。エリアの広さ。反面、送信時間の合計で制限とか。
キャリアじゃなくても、自分で基地局を作って、自分の周りで通信を確保。キャリアっぽいサービスを提供しているもの。
データの量は小さいし、頻繁に送信するわけじゃないけど、通信距離は欲しい。

(そのほかには、4800bpsくらいの、敷設するような通信のとか)

自転車の盗難防止タグ。月額が安価。(AirTagでいいじゃん。)
農業用途とか、キロメートル単位の敷地で、水温とか成長に関わるものをモニタしておくとか?

=== 2.4GHzでそのほか?
Matter, Zigbee、独自方式、WiFi
好きに使えばいいとしか、言いようがない。


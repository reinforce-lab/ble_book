= Bluetooth Low Energy技術の仕組み



全体像。無線通信、のり。システム、有機的、対面。
通信は部品。

技術の全体像、その性質を把握する。利用場面や体験を組み立てる、その時点で、そこで使われる無線通信技術が、BLEでいけるのかどうか。ちょっと変えれば使えるのか。簡単な数値の裏付けで肉付け、その繰り返し。技術者にお任せできない。

技術者にも必要。担当ぶんや、スマホのアプリ、ファームウェア、共通知識は、目の前で動いているものの会話に必要。なんとなく動くのだけど。全体から要素を見ること、詳細は知らないけど、何をしているのかはわかる感じ。

この章では、通信の流れを見ていこう。規格や専門書には、細かいところは書いてあるけど、それ以前の話。使い方、常識な感じのところ。




== 通信の全体像を見ていこう。

概要は、

電波でデジタル・データをやり取りする。
機器の連携、アプリの連携。データ表現、通信の上で実現されるところ、結論。

通信の流れ:
相手を見つける、相手に見つけられる、
セキュリティ。他から差し込まれない、読み取られて不都合にならない。追跡されない。
データの表現、そのやりとり。GATT基盤。
切断。

== 電波で情報をやり取り
2.4GHzという、世界であちこちで使えるけど、あちこちが混ざるところ。
ピコネット、目の前のもの。

==

システムを作ることになる。形がない連携部分、複数のソフトや無線、利用者がごちゃっとあって、体験となる。無線通信という、不安定なもので。プラグに電線を挿せば、完全に動く、みたいな完璧さがない。要素に、完璧を期待しちゃうと、期待を裏切られたとなるけど、それはそういうものなので、勘違いでしょう。

技術者というより、振る舞いや体験のプランニングの人にとって、大切。技術でも、企画でも、担当分野が違う人が、別の分野と会話するために、必要。

トマトときゅうりを渡したら、サラダが出てくると思ってたら、野菜スープが出てくるかもしれない。意外と間違いじゃない。

システム丸っと作るのめんどくさくて、スマホという基盤で広がったのが、この技術。だから、他の基盤を使ってってなる。マルッと作るなら技術ベースで、何でもできるし、何でもやることになるけど、他のを利用するなら、制約は出てくる。活用にも、地ボチボ、知識が必要。

知識が欲しい? 規格を読む? よりどこりになるルールだけど、現実は、その部分で動いてる。　全体像や個別の具体的なものは一切書いていないから、細かいルールだけ見ても、その意味がわからない。通信周りの仕組みを作る人たちの拠り所ではあるけど。

技術者が知ってればいい、のでもない。作るのが体験だから。要素要素は作れるし、目の前の動きがなぜそうなっているのかは、1つ1つ細かく分解して1つ1つ見ていけば、説明できる。でもそれ、ダメな振る舞いで、説明できてもどうしょうもないでしょう? 何を作りたいのか、それは作れるのか、その繰り返しには、技術者だろうがなんだろうが、体験のプランニングが要。それは技術者じゃない仕事になるでしょ。

体験を組み立てるのに、要素の技術者と会話する必要があり。専門家は専門家だから、適当な人を採用しよう。その分野での教育教材はあるから、できない人を雇わないように。でも、会話しないとダメでしょ。本筋は間違えず、目に見えない体験を、その人が担当している要素部分が担当すべき振る舞いに、技術の筋道で、伝える。結構大変そうだけど、基礎ではあるので。

== 使われ方の全体像

全体の構成。
ピコネット。1つのセントラル、複数のペリフェラル。(メッシュネットわーく)
層: 物理, リンク、ネットワーク、アプリケーション。

相手の発見、通信開始のやり取り、
パケットやり取りの確保。GATTテーブルの読み出し、読み書き。ペアリング。(ボンディング)
ブロードキャスト。アドバタイジング、スキャン。

電波をやり取りする部分。
チャンネルごとで。3つのアドバタイジングチャンネル、そのほかのホッピング。
ぶつかりやすい。昼下がりのファミレスで使えなくなる。繋がってればいいけど再接続はできない

通信の終わり。切断を知らせる。時間切れ。

再接続、GATTテーブルは同じだろう。読み出しの省略。キャッシュ。(実装依存 -> 結構トラブルので、仕様がある)

== 通信の振る舞いの全体像

== 振る舞いの中での通信の全体像

== 細かいところ

動けばいいのですけど、使えるところまで持っていくのとまた違うのがめんどくさい。

悪意への対処。
追跡、秘密にしたい情報の盗難。
秘密は秘密のまま。
鍵はかけておくもの。

機能の更新。仕様で固めるのと更新するのと。

意味をやり取りする仕組み。
L2CAPチャネル、
GATT

== しっとくといいかも?仕組み

開発でつまづくあれこれ。

システム的:
スマホがあるから成り立つ、開発素材がたまたまある、スマホがある環境を利用したいから使う。丸っと、専用で導入してしまえばいい。部分的にスマホで中継すればいいだけ。

規格の対処とその構造。
オペレーティングシステム(ホスト)、コントローラ部分、アプリへの公開部分。
バージョン、規格で可能、そのハードで可能(USBドンぐる)、 そのOSで可能。
シリアル通信で接続、アプリ自体にホストを持たせる。バイパス的。開発ツールだけど。
iOSではどうなんだろう。かなりサポートされている。

発想的:
動画が送れないの?
エコシステムがないから、全部作ればいけるのかも?新技術があるので、そういうの?
電力効率的には最悪なので。カメラを使うのとかで、WiFiでいい。

ビーコンで距離がわからない? これはきつい。推測はできるので、ぼんやりですむか、ユースケース的に合うのか、ほかの技術を使うのか。

スマホ制約的:

デバイスの管理は、設定アプリでしかできない。
設定アプリから、デバイスの管理。特定のアプリと紐付けするものではないから。MFiを使えば。
その実態は鍵の管理。ペアリング、ボンディング。これの困るのは、

GATTを更新したら、読めなくて困るとか。OTAで生じる。ハンドラが増分だったらいいのだけど、微妙に変わっていたら。キャッシュを捨てるタイミングは、その時期は?

開発的:

パケットの取得。iOSはM1のMacが便利。多分造りも同じでしょう。開発ツールで、記録して抜き出せる。かなり便利になっている。(TBD,詳しいやり方への参照)

通信を制御できるのは、デバイスのファーム側。理解していないと最悪。アプリは作れない。
GATTの構造とか。知らないととんでもないのを作られるかも? アプリから見て不都合があったり作りにくいなら、デバイス側。開発時に、動作試験のものを作るなり、交流を入れておく?
通信パラメータを要求したり、切断要求を出したり(これはアプリでもできるかな?)ベータ版で、切断の振る舞いが変わって困ったこと。アドバタイジングが決め手だったので。今なら、接続かつアドバタイジングを容易に実装できるけど。
パケットのサイズ。ATTは分割できないので。


== 規格があるよ、部品もあるよ。

Bluetooth無線技術、Bluetooth SIGという団体。無線通信規格がある。

ある会社が持っている技術なのか、共有されているのか。
1社で全て提供。部品ならいいかも? でも、3rdがないと、会社が販売を辞めてしまわないか、価格を上げてこないか。特殊な用途に。製品単位で使えればいい。他社でも同様の製品があればいいけど、特殊すぎると採用怖い。マウスの超低消費電力の製品。そこまで特殊用途だと問題視する必要もないか。

共有の仕方。規格。技術は強みとは言っても、共有しないと広くは使えない。共有財産、ライセンシング。技術で囲い込めない構造。通信には通信相手が必要。実装と広がりのバランス。学会で作っても、実装してくれる人がいないと、規格だけ。実装するところが中心になると、ただの囲い込み。開かれた運用、組織運用が肝心。

== 規格の構成とその刷新

SIGによる管理。スマートホンとの兼ね合いで、Appleも入って。独自拡張でとりあえず展開されてからだと、混乱しかなくなるし。プラットホームが、スマホにまで広がっているのだなと。

コア技術、プロファイルとサービス仕様
バージョン管理、サービスの定義を追加して差分更新ができるので。

=== 新たに導入された技術の差分

コア技術の、規格のバージョン。

4.x系
ペリフェラルとセントラルの、同時。4.2。スマホの利用場面に合うように。Androidで混乱があったけど。
L2CAPチャンネルの導入。連続したデータが扱えるように。ファームウェアとか?
パケット長の延長。IPv6とか、もっと長いデータを扱う場合。パケットサイズ、分割してもいいけど。1回で送れるものなら送れるように。単位を合わせてた方が、めんどくささがないのかな。

アセット管理がいけるのかも。距離の推定は強弱のみ、これはどうしょうもない。
電波の方向の検出。AoA。
アドバタイジングのデータの拡大。ビーコン。

高速化、ファームとか。音する時間が短くできる。ほとんど短距離で使うから。省電力。オプションだけど。
電化製品、距離が必要。離れに設置したもの、メッシュネットワークするにしても。
Zigbee、変調方式。送信電力は同じ、ビットレート低め、通信距離長め。
電波をやり取りする部分。高速化、長距離化。通信ではあるある。使えるけどどうするんでしょうね。

新たなブロードキャスト的なデータ伝送。とりあえずの利用場面は、オーディオ。
